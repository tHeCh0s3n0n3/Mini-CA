@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (User is not null
     && User.Identity is not null
     && User.Identity.IsAuthenticated)
{
        string? friendlyName;
        @if (!string.IsNullOrEmpty(User.Identity.AuthenticationType)
             && User.Identity.AuthenticationType.Equals(AspNet.Security.OAuth.Nextcloud.NextcloudAuthenticationDefaults.AuthenticationScheme))
        {
            friendlyName = User.Claims.FirstOrDefault(c => c.Type is not null
                                                           && c.Type == "urn:nextcloud:displayname")
                                          ?.Value;
        }
        else
        {
            friendlyName = User.Identity.Name;
        }

    <li class="nav-item">
        <a class="nav-link text-dark"
        asp-area="Identity"
        asp-page="/Account/Manage/Index"
           title="Manage">Hello @friendlyName!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
